Codes for unconstrained submodular maximization.

Contains implementations of different subgradient schedules for unconstrained maximization. They include: (see section 6.3 of the paper)

1) Deterministic Local search (sfo_ls_lazy.m - This was already implemented by Andreas Krause in his sfo toolbox)
2) Randomized Local search (sfo_randomLS.m)
3) Bi-directional Greedy (sfo_bidirectional_greedy.m)
4) Randomized bi-directional greedy (sfo_randomgreedymax.m)
5) Random Permutation (sfo_max_randperm.m)
6) Random Adaptive (sfo_max_randperm.m)
7) Random Set (sfo_max_rand.m)

Some sample experimental setups for maximization, and a comparison of these algorithms is in simulations.m

For running the codes, you will need to download the matlab toolbox sfo, written by Andreas Krause (obtainable here - http://users.cms.caltech.edu/~krausea/sfo/), and add it to the matlab path. 

If you use this code, or any part of it, please cite our paper - 

Fast Semi-differential based Submodular Function Optimization, 
Rishabh Iyer, Stefanie Jegelka and Jeff Bilmes
In Proc. ICML, 2013.


LICENSE

This code is provided free for non-commercial use under the terms of the GNU General Public License. 
The current version is the 1.0 and has been released on August 27, 2013. 

THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
